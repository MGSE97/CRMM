@using DatabaseContext.Models
@using ModelCore
@model System.Collections.Generic.IList<DatabaseContext.Models.Place>

@{
    ViewBag.Title = "Lokace";
    Layout = "_Layout";
    ViewData["Path"] = new Dictionary<string, string>() {
        { "CRMM", Url.Action("Index", "Home") },
        { "Lokace", "" }
    };
}

@Html.PartialAsync("_Table", new TableModel("Lokace", typeof(Place), Model, new TableOptions(
    Url.Action("Create"),
    Url.Action("Edit", new { id = "_id_" }),
    Url.Action("Delete", new { id = "_id_" })
))).Result

<div class="embed-responsive embed-responsive-21by9">
    <div id='map' class="embed-responsive-item"></div>
    <script type="text/javascript">
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v10',
        center: [0, 0],
        zoom: 1
    });

    // Add zoom and rotation controls to the map.
    map.addControl(new mapboxgl.NavigationControl());
    // Add geolocate control to the map.
    map.addControl(new mapboxgl.GeolocateControl({
        positionOptions: {
            enableHighAccuracy: true
        },
        trackUserLocation: true
    }));


    // Add markers
    @foreach (var place in Model)
    {
        <text>
        new mapboxgl.Marker()
            .setLngLat([@place.X.ToString().Replace(',', '.'), @place.Y.ToString().Replace(',','.')])
            .setPopup(
                new mapboxgl.Popup({ offset: 25 })
                    .setHTML('<h6 class="m-0">@place.Name</h6><small>@place.Type</small><br/>@place.Address')
            )
            .addTo(map);
        </text>
    }
    </script>
</div>