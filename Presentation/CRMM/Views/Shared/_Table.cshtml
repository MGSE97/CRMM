@using Data.Mapping
@using Data.Mapping.Extensions
@model TableModel

<div class="table-responsive row">
    <div class="col-12">
        <h3>
            @Model.Title
            <div class="btn-group btn-toolbar float-right m-1 text-white" role="group" aria-label="Basic example">
                @if (Model.Mode.HasFlag(TableMode.Export))
                {
                    <button id="export" type="button" class="btn btn-primary btn-sm m-1 dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-download"></i>&nbsp;Exportovat
                    </button>
                    <div class="dropdown-menu bg-primary text-white" aria-labelledby="export">
                        <a class="dropdown-item text-white" href="@(Model.Options?.ExportUrl?.Replace("_type_","json"))" tooltip="Exportovat JSON" target="_blank"><i class="fas fa-file-alt"></i>&nbsp;JSON</a>
                        <a class="dropdown-item text-white" href="@(Model.Options?.ExportUrl?.Replace("_type_","xml"))" tooltip="Exportovat XML" target="_blank"><i class="fas fa-book-dead"></i>&nbsp;XML</a>
                    </div>
                }
                @if (Model.Mode.HasFlag(TableMode.Create))
                {
                    <a class="btn btn-success btn-sm m-1" href="@(Model.Options?.CreateUrl)" tooltip="Vytvořit" target="_self"><i class="fas fa-plus"></i>&nbsp;Vytvořit</a>
                }
            </div>
    </h3>
    </div>
    <div class="col-12">
        <table class="table table-sm table-striped table-hover table-bordered">
            <thead class="thead-dark">
                <tr>
                    @foreach (var property in Model.DataType.GetProperties().Where(p => !p.IsLazy() && !p.IsIgnored() && p.CanRead(AccessProtection.Public)))
                    {
                        <th scope="col">@property.Name</th>
                    }
                    @if (Model.Mode.HasFlag(TableMode.Edit))
                    {
                        <th scope="col" width="1"></th>
                    }
                    @if (Model.Mode.HasFlag(TableMode.Delete))
                    {
                        <th scope="col" width="1"></th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Data)
                {
                    <tr>
                        @foreach (var property in item.ToDictionary(AccessProtection.Private))
                        {
                            <td>@property.Value</td>
                        }
                        @if (Model.Mode.HasFlag(TableMode.Edit))
                        {
                            <td>
                                <a class="btn btn-warning btn-sm" href="@(Model.Options?.EditUrl?.Replace("_id_", item?.GetKeys().FirstOrDefault().Value.ToString()))" data-toggle="tooltip" data-placement="left" title="Upravit" target="_self"><i class="fas fa-edit"></i></a>
                            </td>
                        }
                        @if (Model.Mode.HasFlag(TableMode.Delete))
                        {
                            <td>
                                <a class="btn btn-danger btn-sm" href="@(Model.Options?.DeleteUrl?.Replace("_id_", item?.GetKeys().FirstOrDefault().Value.ToString()))" data-toggle="tooltip" data-placement="left" title="Smazat" target="_self"><i class="fas fa-trash"></i></a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>